Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
df <- train %>%
mutate(FinaceStatus <- Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040)
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
df <- train %>%
mutate(FinaceStatus <- Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040)
df <- df %>%
mutate(EducationStatus <- Q120379*0.6497771 + Q122771*-0.4915218 + Q119851*0.5922486)
df <- df %>%
mutate(Fam <- Q98059*-0.68715014 + Q120650*-0.49784237 +  Q108617*0.66863893 +  Q99716*0.63392069)
df <- df %>%
mutate(Soc <- Q106997*-0.65758066 + Q108856*-0.66264616 + Q113584*-0.51027050)
df <- df %>% mutate(Att <- Q119650*-0.5884656 + Q98869*-0.6552226 + Q114961*0.5760039 + Q116881*-0.4754082)
df <- df %>% mutate(Con <- Q118117*-0.58626035 + Q121700*-0.62746999 + Q116448*-0.58817316)
df <- df %>% mutate(Slf <- Q106993*-0.58365703 + Q107869*-0.40823785 + Q112512*-0.45264414
+ Q120014*-0.47422437 + Q122120*0.53987832)
df <- df %>% mutate(Frst <- Q105840*-0.578957504 + Q100680*-0.527635468 + Q120012*-0.420185112
+ Q102906*-0.562846897 + Q118237*-0.569155604)
df <- df %>% mutate(Pray = mean(Q98197 + Q113181))
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
df <- train0
df <- df %>%
mutate(FinaceStatus <- Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040,
EducationStatus <- Q120379*0.6497771 + Q122771*-0.4915218 + Q119851*0.5922486)
df <- df %>%
mutate(FinaceStatus <- Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040)
df <- df %>%
mutate(EducationStatus <- Q120379*0.6497771 + Q122771*-0.4915218 + Q119851*0.5922486)
df <- df %>%
mutate(Fam <- Q98059*-0.68715014 + Q120650*-0.49784237 +  Q108617*0.66863893 +  Q99716*0.63392069)
df <- df %>%
mutate(Soc <- Q106997*-0.65758066 + Q108856*-0.66264616 + Q113584*-0.51027050)
df <- df %>% mutate(Att <- Q119650*-0.5884656 + Q98869*-0.6552226 + Q114961*0.5760039 + Q116881*-0.4754082)
df <- df %>% mutate(Slf <- Q106993*-0.58365703 + Q107869*-0.40823785 + Q112512*-0.45264414
df <- df %>% mutate(Con <- Q118117*-0.58626035 + Q121700*-0.62746999 + Q116448*-0.58817316)
+ Q120014*-0.47422437 + Q122120*0.53987832)
df <- df %>% mutate(Frst <- Q105840*-0.578957504 + Q100680*-0.527635468 + Q120012*-0.420185112
+ Q102906*-0.562846897 + Q118237*-0.569155604)
df <- df %>% mutate(Pray = mean(Q98197 + Q113181))
# set Logistic Regression
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
df <- train
df <- df %>%
mutate(FinaceStatus <- Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040)
df <- df %>%
mutate(EducationStatus <- Q120379*0.6497771 + Q122771*-0.4915218 + Q119851*0.5922486)
df <- df %>%
mutate(Fam <- Q98059*-0.68715014 + Q120650*-0.49784237 +  Q108617*0.66863893 +  Q99716*0.63392069)
df <- df %>%
mutate(Soc <- Q106997*-0.65758066 + Q108856*-0.66264616 + Q113584*-0.51027050)
df <- df %>% mutate(Att <- Q119650*-0.5884656 + Q98869*-0.6552226 + Q114961*0.5760039 + Q116881*-0.4754082)
df <- df %>% mutate(Con <- Q118117*-0.58626035 + Q121700*-0.62746999 + Q116448*-0.58817316)
df <- df %>% mutate(Slf <- Q106993*-0.58365703 + Q107869*-0.40823785 + Q112512*-0.45264414
+ Q120014*-0.47422437 + Q122120*0.53987832)
df <- df %>% mutate(Frst <- Q105840*-0.578957504 + Q100680*-0.527635468 + Q120012*-0.420185112
+ Q102906*-0.562846897 + Q118237*-0.569155604)
df <- df %>% mutate(Pray = mean(Q98197 + Q113181))
df <- train
df <- df %>%
mutate(FinaceStatus = Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040)
df <- df %>%
mutate(EducationStatus = Q120379*0.6497771 + Q122771*-0.4915218 + Q119851*0.5922486)
df <- df %>%
mutate(Fam = Q98059*-0.68715014 + Q120650*-0.49784237 +  Q108617*0.66863893 +  Q99716*0.63392069)
df <- df %>%
mutate(Soc = Q106997*-0.65758066 + Q108856*-0.66264616 + Q113584*-0.51027050)
df <- df %>% mutate(Att = Q119650*-0.5884656 + Q98869*-0.6552226 + Q114961*0.5760039 + Q116881*-0.4754082)
df <- df %>% mutate(Con = Q118117*-0.58626035 + Q121700*-0.62746999 + Q116448*-0.58817316)
df <- df %>% mutate(Slf = Q106993*-0.58365703 + Q107869*-0.40823785 + Q112512*-0.45264414
+ Q120014*-0.47422437 + Q122120*0.53987832)
df <- df %>% mutate(Frst = Q105840*-0.578957504 + Q100680*-0.527635468 + Q120012*-0.420185112
+ Q102906*-0.562846897 + Q118237*-0.569155604)
df <- df %>% mutate(Pray = mean(Q98197 + Q113181))
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
summary(Log2)
df <- df %>% mutate(Pray = mean(Q98197 + Q113181))
# set Logistic Regression
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
summary(Log2)
df <- df %>% mutate(Pray = mean(Q98197, Q113181))
df <- df %>% mutate(Pray = (Q98197 + Q113181)/2)
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
summary(Log2)
tb <- table(df$Party, predict(Log2, type = "response") >= 0.5)
(tb[1,1]+tb[2,2])/5235
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
summary(Log2)
Log2 <- glm(Party ~ EducationStatus + Fam + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
summary(Log2)
tb <- table(df$Party, predict(Log2, type = "response") >= 0.5)
(tb[1,1]+tb[2,2])/5235
Log2 <- glm(Party ~ FinaceStatus + EducationStatus + Fam + Soc + Att + Con + Slf + Frst + Pray + Q109244
+ Q115611 + Gender, data = df, family = binomial)
summary(Log2)
tb <- table(df$Party, predict(Log2, type = "response") >= 0.5)
(tb[1,1]+tb[2,2])/5235
test <- read.csv("test2016.csv",  stringsAsFactors = F)
## Clean data
test[test == ""] = 0
any(is.na(test))
test[test == "Democrat"] = 0
test[test == "Republican"] = 1
test[test == "Yes"] = 2
test[test == "No"] = 1
test[test == "Male"] = 2
test[test == "Female"] = 1
test[test == "Only-child"] = 1
test[test == "Check!"] = 2
test[test == "Nope"] = 1
test[test == "Optimist"] = 2
test[test == "Pessimist"] = 1
test[test == "Mom"] = 2
test[test == "Dad"] = 1
test[test == "Rent"] = 2
test[test == "Own"] = 1
test[test == "Public"] = 2
test[test == "Private"] = 1
test[test == "Science"] = 2
test[test == "Art"] = 1
test[test == "Study first"] = 2
test[test == "Try first"] = 1
test[test == "Giving"] = 2
test[test == "Receiving"] = 1
test[test == "Idealist"] = 2
test[test == "Pragmatist"] = 1
test[test == "Standard hours"] = 2
test[test == "Odd hours"] = 1
test[test == "Hot headed"] = 2
test[test == "Cool headed"] = 1
test[test == "Happy"] = 2
test[test == "Right"] = 1
test[test == "A.M."] = 2
test[test == "P.M."] = 1
test[test == "Circumstances"] = 2
test[test == "Me"] = 1
test[test == "Start"] = 2
test[test == "End"] = 1
test[test == "TMI"] = 2
test[test == "Mysterious"] = 1
test[test == "People"] = 2
test[test == "Technology"] = 1
test[test == "Tunes"] = 2
test[test == "Talk"] = 1
test[test == "Supportive"] = 2
test[test == "Demanding"] = 1
test[test == "Mac"] = 2
test[test == "PC"] = 1
test[test == "Cautious"] = 2
test[test == "Risk-friendly"] = 1
test[test == "Socialize"] = 2
test[test == "Space"] = 1
test[test == "Yes!"] = 2
test[test == "Umm..."] = 1
test[test == "Online"] = 2
test[test == "In-person"] = 1
test[test == "Yay people!"] = 2
test[test == "Grrr people"] = 1
test[test == "under $25,000"] = 1
test[test == "$25,001 - $50,000"] = 2
test[test == "$50,000 - $74,999"] = 3
test[test == "$75,000 - $100,000"] = 4
test[test == "$100,001 - $150,000"] = 5
test[test == "over $150,000"] = 6
test[test == "Current K-12"] = 1
test[test == "High School Diploma"] = 2
test[test == "Current Undergraduate"] = 3
test[test == "Associate's Degree"] = 4
test[test == "Bachelor's Degree"] = 5
test[test == "Master's Degree"] = 6
test[test == "Doctoral Degree"] = 7
test[test == "Domestic Partners (no kids)"] = 1
test[test == "Domestic Partners (w/kids)"] = 2
test[test == "Married (no kids)"] = 3
test[test == "Married (w/kids)"] = 4
test[test == "Single (no kids)"] = 5
test[test == "Single (w/kids)"] = 6
test = sapply(test, as.numeric)
test <- as.data.frame(test)
str(test)
df <- test
df <- df %>%
mutate(FinaceStatus = Q102674*0.69741563 + Q106388*0.45840428 + Q108343*0.67475749
+ Q116441*0.56444927 + Q123621*0.54434040)
df <- df %>%
mutate(EducationStatus = Q120379*0.6497771 + Q122771*-0.4915218 + Q119851*0.5922486)
df <- df %>%
mutate(Fam = Q98059*-0.68715014 + Q120650*-0.49784237 +  Q108617*0.66863893 +  Q99716*0.63392069)
df <- df %>%
mutate(Soc = Q106997*-0.65758066 + Q108856*-0.66264616 + Q113584*-0.51027050)
df <- df %>% mutate(Att = Q119650*-0.5884656 + Q98869*-0.6552226 + Q114961*0.5760039 + Q116881*-0.4754082)
df <- df %>% mutate(Con = Q118117*-0.58626035 + Q121700*-0.62746999 + Q116448*-0.58817316)
df <- df %>% mutate(Slf = Q106993*-0.58365703 + Q107869*-0.40823785 + Q112512*-0.45264414
+ Q120014*-0.47422437 + Q122120*0.53987832)
df <- df %>% mutate(Frst = Q105840*-0.578957504 + Q100680*-0.527635468 + Q120012*-0.420185112
+ Q102906*-0.562846897 + Q118237*-0.569155604)
df <- df %>% mutate(Pray = (Q98197 + Q113181)/2)
PredTest = predict(Log1, newdata=test, type="response")
PredTest = predict(Log2, newdata=test, type="response")
PredTest = predict(Log2, newdata=df, type="response")
threshold = 0.5
PredTestLabels = as.factor(ifelse(PredTest<threshold, "Democrat", "Republican"))
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredTestLabels)
write.csv(MySubmission, "Log2.csv", row.names=FALSE)
train <- read.csv("train2016.csv",  stringsAsFactors = F)
## Clean data
train[train == ""] = 0
any(is.na(train))
train[train == "Democrat"] = 0
train[train == "Republican"] = 1
train[train == "Yes"] = 2
train[train == "No"] = 1
train[train == "Male"] = 2
train[train == "Female"] = 1
train[train == "Only-child"] = 1
train[train == "Check!"] = 2
train[train == "Nope"] = 1
train[train == "Optimist"] = 2
train[train == "Pessimist"] = 1
train[train == "Mom"] = 2
train[train == "Dad"] = 1
train[train == "Rent"] = 2
train[train == "Own"] = 1
train[train == "Public"] = 2
train[train == "Private"] = 1
train[train == "Science"] = 2
train[train == "Art"] = 1
train[train == "Study first"] = 2
train[train == "Try first"] = 1
train[train == "Giving"] = 2
train[train == "Receiving"] = 1
train[train == "Idealist"] = 2
train[train == "Pragmatist"] = 1
train[train == "Standard hours"] = 2
train[train == "Odd hours"] = 1
train[train == "Hot headed"] = 2
train[train == "Cool headed"] = 1
train[train == "Happy"] = 2
train[train == "Right"] = 1
train[train == "A.M."] = 2
train[train == "P.M."] = 1
train[train == "Circumstances"] = 2
train[train == "Me"] = 1
train[train == "Start"] = 2
train[train == "End"] = 1
train[train == "TMI"] = 2
train[train == "Mysterious"] = 1
train[train == "People"] = 2
train[train == "Technology"] = 1
train[train == "Tunes"] = 2
train[train == "Talk"] = 1
train[train == "Supportive"] = 2
train[train == "Demanding"] = 1
train[train == "Mac"] = 2
train[train == "PC"] = 1
train[train == "Cautious"] = 2
train[train == "Risk-friendly"] = 1
train[train == "Socialize"] = 2
train[train == "Space"] = 1
train[train == "Yes!"] = 2
train[train == "Umm..."] = 1
train[train == "Online"] = 2
train[train == "In-person"] = 1
train[train == "Yay people!"] = 2
train[train == "Grrr people"] = 1
train[train == "under $25,000"] = 1
train[train == "$25,001 - $50,000"] = 2
train[train == "$50,000 - $74,999"] = 3
train[train == "$75,000 - $100,000"] = 4
train[train == "$100,001 - $150,000"] = 5
train[train == "over $150,000"] = 6
train[train == "Current K-12"] = 1
train[train == "High School Diploma"] = 2
train[train == "Current Undergraduate"] = 3
train[train == "Associate's Degree"] = 4
train[train == "Bachelor's Degree"] = 5
train[train == "Master's Degree"] = 6
train[train == "Doctoral Degree"] = 7
train[train == "Domestic Partners (no kids)"] = 1
train[train == "Domestic Partners (w/kids)"] = 2
train[train == "Married (no kids)"] = 3
train[train == "Married (w/kids)"] = 4
train[train == "Single (no kids)"] = 5
train[train == "Single (w/kids)"] = 6
train = sapply(train, as.numeric)
train <- as.data.frame(train)
str(train)
natr <- train[rowSums(is.na(train)) > 0, ]
tr <- na.omit(train)
Log3 <- glm(Party ~ Gender + Q115611 + Q113181 + Q110740 + Q109244 + Q108855 + Q107491
+ Q106997 +Q106272 +Q106388 +Q106389 +Q106042 +Q105840 +Q105655 + Q101163
+ Q101596 + Q99480 + Q98869 + Q98059 + Q98197, data = train, family = binomial)
test <- read.csv("test2016.csv", stringsAsFactors = F)
any(is.na(test))
str(test)
test[test == ""] = "Skip"
str(test)
test <- lapply(test, as.factor)
test$USER_ID <- as.numeric(as.character(test$USER_ID))
test$YOB <- as.numeric(as.character(test$YOB))
class(test)
test <- as.data.frame(test)
str(test)
any(is.na(test))
nrow(test[which(is.na(test)), ])
test <- na.omit(test)
class(test)
PredTest = predict(Log1, newdata=test, type="response")
threshold = 0.5
PredTest = predict(Log3, newdata=test, type="response")
Log3 <- glm(Party ~ Gender + Q115611 + Q113181 + Q110740 + Q109244 + Q108855 + Q107491
+ Q106997 +Q106272 +Q106388 +Q106389 +Q106042 +Q105840 +Q105655 + Q101163
+ Q101596 + Q99480 + Q98869 + Q98059 + Q98197, data = tr, family = binomial)
PredTest = predict(Log3, newdata=test, type="response")
test <- read.csv("test2016.csv",  stringsAsFactors = F)
## Clean data
test[test == ""] = 0
any(is.na(test))
test[test == "Democrat"] = 0
test[test == "Republican"] = 1
test[test == "Yes"] = 2
test[test == "No"] = 1
test[test == "Male"] = 2
test[test == "Female"] = 1
test[test == "Only-child"] = 1
test[test == "Check!"] = 2
test[test == "Nope"] = 1
test[test == "Optimist"] = 2
test[test == "Pessimist"] = 1
test[test == "Mom"] = 2
test[test == "Dad"] = 1
test[test == "Rent"] = 2
test[test == "Own"] = 1
test[test == "Public"] = 2
test[test == "Private"] = 1
test[test == "Science"] = 2
test[test == "Art"] = 1
test[test == "Study first"] = 2
test[test == "Try first"] = 1
test[test == "Giving"] = 2
test[test == "Receiving"] = 1
test[test == "Idealist"] = 2
test[test == "Pragmatist"] = 1
test[test == "Standard hours"] = 2
test[test == "Odd hours"] = 1
test[test == "Hot headed"] = 2
test[test == "Cool headed"] = 1
test[test == "Happy"] = 2
test[test == "Right"] = 1
test[test == "A.M."] = 2
test[test == "P.M."] = 1
test[test == "Circumstances"] = 2
test[test == "Me"] = 1
test[test == "Start"] = 2
test[test == "End"] = 1
test[test == "TMI"] = 2
test[test == "Mysterious"] = 1
test[test == "People"] = 2
test[test == "Technology"] = 1
test[test == "Tunes"] = 2
test[test == "Talk"] = 1
test[test == "Supportive"] = 2
test[test == "Demanding"] = 1
test[test == "Mac"] = 2
test[test == "PC"] = 1
test[test == "Cautious"] = 2
test[test == "Risk-friendly"] = 1
test[test == "Socialize"] = 2
test[test == "Space"] = 1
test[test == "Yes!"] = 2
test[test == "Umm..."] = 1
test[test == "Online"] = 2
test[test == "In-person"] = 1
test[test == "Yay people!"] = 2
test[test == "Grrr people"] = 1
test[test == "under $25,000"] = 1
test[test == "$25,001 - $50,000"] = 2
test[test == "$50,000 - $74,999"] = 3
test[test == "$75,000 - $100,000"] = 4
test[test == "$100,001 - $150,000"] = 5
test[test == "over $150,000"] = 6
test[test == "Current K-12"] = 1
test[test == "High School Diploma"] = 2
test[test == "Current Undergraduate"] = 3
test[test == "Associate's Degree"] = 4
test[test == "Bachelor's Degree"] = 5
test[test == "Master's Degree"] = 6
test[test == "Doctoral Degree"] = 7
test[test == "Domestic Partners (no kids)"] = 1
test[test == "Domestic Partners (w/kids)"] = 2
test[test == "Married (no kids)"] = 3
test[test == "Married (w/kids)"] = 4
test[test == "Single (no kids)"] = 5
test[test == "Single (w/kids)"] = 6
test = sapply(test, as.numeric)
test <- as.data.frame(test)
str(test)
PredTest = predict(Log3, newdata=test, type="response")
threshold = 0.5
PredTestLabels = as.factor(ifelse(PredTest<threshold, "Democrat", "Republican"))
# However, you can submit the file on Kaggle to see how well the model performs. You can make up to 5 submissions per day, so don't hesitate to just upload a solution to see how you did.
# Let's prepare a submission file for Kaggle (for more about this, see the "Evaluation" page on the competition site):
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredTestLabels)
write.csv(MySubmission, "Log3.csv", row.names=FALSE)
result0.61063 <- read.csv("Log1.csv")
result0.61063 <- read.csv("Log1.csv")
View(result0.61063)
reslult0.54023 <- read.csv("Log3.csv")
result0.55460 <- read.csv("Log2.csv")
train <- read.csv("train2016.csv", na.strings = c("", "NA"), stringsAsFactors = T)
any(is.na(train))
str(train)
nrow(train[which(is.na(train)), ])
train90 <- train[rowSums(!is.na(train))/106 >= 0.9, ]
library(mica)
library(mice)
train90.im <- complete(mice(train90))
save.image("~/Documents/MOOC/1.MITx - 15.071x The Analytics Edge/Kaggle Competition/train90imputed.RData")
library(ranger)
library(Boruta)
boruta.train <- Boruta(Party ~. -USER_ID, data = train90.im, doTrace = 1)
getSelectedAttributes(final.boruta, withTentative = F)
final.boruta <- TentativeRoughFix(boruta.train)
print(final.boruta)
getSelectedAttributes(final.boruta, withTentative = F)
Logfor6 <- glm(Party ~ Q119851 + Q116881 + Q115611 + Q113181 + Q109244 + Q98197, data = train, family = binomial)
predict(Logfor6, type = response)
predict(Logfor6, method = "response")
predict(Logfor6, method = "response") > 0.5
table(train$Party, predict(Logfor6, method = "response") > 0.5)
table(train$Party, predict(Logfor6, method = "response") > 0.5)
tb <- table(train$Party, predict(Logfor6, type = "response") >= 0.5)
(tb[1,1]+tb[2,2])/5568
summary(Logfor6)
library(dplyr)
filter(train, Q119851 %in% NA $ Q116881 %in% NA)
filter(train, is.na(Q119851) $ is.na(Q116881))
train[is.na(train$Q119851) $ is.na(train$Q116881) ,]
subset(train, is.na(Q119851))
subset(train, is.na(Q119851))$Q119851
subset(train, is.na(Q119851) $ is.na(Q116881))
subset(train, is.na(Q119851) $$ is.na(Q116881))
select(train, is.na(Q119851), is.na(Q116881))
train %>%
select(is.na(Q119851), is.na(Q116881))
filter(is.na(Q119851), is.na(Q116881))
train %>%
filter(is.na(Q119851), is.na(Q116881))
filter(is.na(Q119851), is.na(Q116881), is.na(Q115611), is.na(Q113181), is.na(Q109244), is.na(Q98197))
train %>%
filter(is.na(Q119851), is.na(Q116881), is.na(Q115611), is.na(Q113181), is.na(Q109244), is.na(Q98197))
library(caret)
library(lattice)
library(caret)
library(e1071)
train (Party ~. -USER_ID, data = train90.im, method="rpart", trControl= trainControl(method = "cv",
number = 20), tuneGrid= expand.grid(.cp = seq(0.001, 0.1, 0.00.1)))
number = 20), tuneGrid= expand.grid(.cp = seq(0.001, 0.1, 0.001)))
C <-trainControl(method = "cv", number = 20)
G <- expand.grid(.cp = seq(0.001, 0.1, 0.001))
train (Party ~. -USER_ID, data = train90.im, method="rpart", trControl= C, tuneGrid= G)
library(rpart)
train (Party ~. -USER_ID, data = train90.im, method="rpart", trControl= C, tuneGrid= G)
Cart <- rpart(Party ~. -USER_ID, data data = train90.im)
Cart <- rpart(Party ~. -USER_ID, data = train90.im)
Cart <- rpart(Party ~. -USER_ID, data = train90.im, cp = 0.026)
Cart <- rpart(Party ~. -USER_ID, data = train90.im, method = "class" cp = 0.026)
Cart <- rpart(Party ~. -USER_ID, data = train90.im, method = "class", cp = 0.026)
library(rpart.plot)
prp(Cart)
Cart <- rpart(Party ~. -USER_ID, data = train, method = "class", cp = 0.026)
prp(Cart)
Cart <- rpart(Party ~ Q119851 + Q116881 + Q115611 + Q113181 + Q109244 + Q98197, data = train90.im, method = "class", cp = 0.026)
prp(Cart)
train0 <-
train %>%
filter(is.na(Q119851), is.na(Q116881), is.na(Q115611), is.na(Q113181), is.na(Q109244), is.na(Q98197))
Logfor0 <- glm(Party ~ YOB + Gender + EducationLevel + Income + HouseholdStatus, data = train0, family = binomial)
tb <- table(train0$Party, predict(Logfor0, type = "response") >= 0.5)
tb <- table(train0$Party, predict(Logfor0, type = "response")[ ,2] >= 0.5)
summary(Logfor6)
Logfor11 <- glm(Party ~ Gender + YOB + Income + EducationLevel + Q119851 + Q116881 + Q115611 + Q113181 + Q109244
+ Q98197, data = train, family = binomial)
summary(Logfor11)
test = read.csv("test2016.csv", na.strings = c("", "NA"), stringsAsFactors = T)
PredTest = predict(Logfor11, newdata=test, type="response")
threshold = 0.5
PredTestLabels = as.factor(ifelse(PredTest<threshold, "Democrat", "Republican"))
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredTestLabels)
write.csv(MySubmission, "LastSub.csv", row.names=FALSE)
Logfor7 <- glm(Party ~ Gender + Q119851 + Q116881 + Q115611 + Q113181 + Q109244
+ Q98197, data = train, family = binomial)
summary(Logfor7)
PredTest = predict(Logfor11, newdata=test, type="response")
threshold = 0.5
PredTestLabels = as.factor(ifelse(PredTest<threshold, "Democrat", "Republican"))
MySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredTestLabels)
write.csv(MySubmission, "LastSub6.csv", row.names=FALSE)
